{"name": "test_homepage", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "setup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6a449e95b9204a944303cf699c2f449d\")>\n\n    @pytest.fixture(scope='function')\n    def authorization(setup):\n        driver = setup\n        username = driver.find_element(By.XPATH,\n                                       '/html/body/app-root/app-auth-screen/app-login-screen/form/div/lta-input[1]/label/span[2]/input')\n        username.send_keys('admin')\n        print('USERNAME PLACED')\n        password = driver.find_element(By.XPATH,\n                                       '/html/body/app-root/app-auth-screen/app-login-screen/form/div/lta-input[2]/label/span[2]/input')\n        password.send_keys('admin')\n        print('PASSWORD PLACED')\n        button_login = driver.find_element(By.XPATH,\n                                           '/html/body/app-root/app-auth-screen/app-login-screen/form/lta-btn/button')\n        button_login.click()\n        wait = WebDriverWait(driver, 20, 0.5)\n>       wait.until(ec.url_to_be('http://185.221.152.176/hmi/17'))\n\nTest_Cases/conftest.py:50: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"6a449e95b9204a944303cf699c2f449d\")>\nmethod = <selenium.webdriver.support.expected_conditions.url_to_be object at 0x7faf97592c40>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/site-packages/selenium/webdriver/support/wait.py:80: TimeoutException"}, "start": 1678792149621, "stop": 1678792149621, "uuid": "6aaff1eb-0aa3-4c76-bb6f-fea991fe6393", "historyId": "f4a4792bf9e8d3e6161a1b995a675a88", "testCaseId": "9e28a02dcb251f6fdd23738855141c19", "fullName": "Test_Cases.test_homepage.TestHomepage#test_homepage", "labels": [{"name": "parentSuite", "value": "Test_Cases"}, {"name": "suite", "value": "test_homepage"}, {"name": "subSuite", "value": "TestHomepage"}, {"name": "host", "value": "MacBook-Pro-Maksim.local"}, {"name": "thread", "value": "2171-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Test_Cases.test_homepage"}]}