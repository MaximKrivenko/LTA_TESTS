{"uid":"bff7a2a63a7ffab1","name":"Создание сложной моедели с двумя дочерними моделями с одинаковыми именами, проверка и удаление","fullName":"Test_Cases.test_model.TestModel#test_model4","historyId":"759403f4b2113c9d1c5261d051f68ce0","time":{"start":1691062137960,"stop":1691062137963,"duration":3},"description":"Проверка работоспособности раздела 'Модели'","descriptionHtml":"<p>Проверка работоспособности раздела 'Модели'</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nfrom unknown error: web view not found\n  (Session info: chrome=115.0.5790.110)\nStacktrace:\n#0 0x560172680783 <unknown>\n#1 0x5601723ac917 <unknown>\n#2 0x5601723847b1 <unknown>\n#3 0x560172410bff <unknown>\n#4 0x560172423c26 <unknown>\n#5 0x56017240bbd3 <unknown>\n#6 0x5601723dfa7b <unknown>\n#7 0x5601723e081e <unknown>\n#8 0x560172641e98 <unknown>\n#9 0x560172645d67 <unknown>\n#10 0x56017265032c <unknown>\n#11 0x560172646993 <unknown>\n#12 0x560172615827 <unknown>\n#13 0x56017266a8a8 <unknown>\n#14 0x56017266aa36 <unknown>\n#15 0x5601726795f3 <unknown>\n#16 0x7f3736f0bb43 <unknown>","statusTrace":"self = <Test_Cases.test_model.TestModel object at 0x7fc6039e1750>\nget_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c3a1f42619ec01070bee3291c2e2f62c\")>\n\n    @allure.description(\"Проверка работоспособности раздела 'Модели'\")\n    @allure.title(\"Создание сложной моедели с двумя дочерними моделями с одинаковыми именами, проверка и удаление\")\n    def test_model4(self, get_webdriver):\n        print('Complex model child models name validation test launched...')\n        self.driver = get_webdriver\n        name = 'AutoTest_Model'\n        description = 'Тестовая модель'\n        wait = WebDriverWait(self.driver, 15, 0.5)\n    \n>       wait.until(ec.presence_of_element_located((By.XPATH, '/html/body/app-root/app-admin-layout/div/main/app-models'\n                                                          '-page/header-layout/div/div[2]/aside-layout/div['\n                                                          '1]/lta-empty-panel/app-tree')))\n\nTest_Cases/test_model.py:665: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/support/wait.py:86: in until\n    value = method(self._driver)\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/support/expected_conditions.py:82: in _predicate\n    return driver.find_element(*locator)\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:740: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/webdriver.py:346: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7fc605082f90>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such window\",\"message\":\"no such window: target window already closed\\\\...\\\\n#14 0x56017266aa36 \\\\u003Cunknown>\\\\n#15 0x5601726795f3 \\\\u003Cunknown>\\\\n#16 0x7f3736f0bb43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchWindowException: Message: no such window: target window already closed\nE       from unknown error: web view not found\nE         (Session info: chrome=115.0.5790.110)\nE       Stacktrace:\nE       #0 0x560172680783 <unknown>\nE       #1 0x5601723ac917 <unknown>\nE       #2 0x5601723847b1 <unknown>\nE       #3 0x560172410bff <unknown>\nE       #4 0x560172423c26 <unknown>\nE       #5 0x56017240bbd3 <unknown>\nE       #6 0x5601723dfa7b <unknown>\nE       #7 0x5601723e081e <unknown>\nE       #8 0x560172641e98 <unknown>\nE       #9 0x560172645d67 <unknown>\nE       #10 0x56017265032c <unknown>\nE       #11 0x560172646993 <unknown>\nE       #12 0x560172615827 <unknown>\nE       #13 0x56017266a8a8 <unknown>\nE       #14 0x56017266aa36 <unknown>\nE       #15 0x5601726795f3 <unknown>\nE       #16 0x7f3736f0bb43 <unknown>\n\n/opt/hostedtoolcache/Python/3.11.4/x64/lib/python3.11/site-packages/selenium/webdriver/remote/errorhandler.py:245: NoSuchWindowException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_chrome_options","time":{"start":1691062108839,"stop":1691062108840,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"get_webdriver","time":{"start":1691062108840,"stop":1691062112011,"duration":3171},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"afterStages":[],"labels":[{"name":"parentSuite","value":"Test_Cases"},{"name":"suite","value":"test_model"},{"name":"subSuite","value":"TestModel"},{"name":"host","value":"fv-az507-51"},{"name":"thread","value":"2165-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Test_Cases.test_model"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":14,"skipped":0,"passed":6,"unknown":0,"total":20},"items":[{"uid":"38abc53f35f9bef6","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/47//#testresult/38abc53f35f9bef6","status":"broken","statusDetails":"urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=38175): Max retries exceeded with url: /session/715ec072add433f2f518c1e56e96c94c/element (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f09883a3f10>: Failed to establish a new connection: [Errno 111] Connection refused'))","time":{"start":1691061784991,"stop":1691061784994,"duration":3}},{"uid":"fb42973ce78bbc14","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/46//#testresult/fb42973ce78bbc14","status":"broken","statusDetails":"urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=49359): Max retries exceeded with url: /session/7c8aec4adb4fb396c89f763efe720e8e/element (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fe4e91e3700>: Failed to establish a new connection: [Errno 111] Connection refused'))","time":{"start":1691061387796,"stop":1691061387798,"duration":2}},{"uid":"14b55b52221e247c","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/44//#testresult/14b55b52221e247c","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x562f731f1783 <unknown>\n#1 0x562f72f1d917 <unknown>\n#2 0x562f72f48978 <unknown>\n#3 0x562f72f459c9 <unknown>\n#4 0x562f72f85a13 <unknown>\n#5 0x562f72f8515f <unknown>\n#6 0x562f72f7cbd3 <unknown>\n#7 0x562f72f50a7b <unknown>\n#8 0x562f72f5181e <unknown>\n#9 0x562f731b2e98 <unknown>\n#10 0x562f731b6d67 <unknown>\n#11 0x562f731c132c <unknown>\n#12 0x562f731b7993 <unknown>\n#13 0x562f73186827 <unknown>\n#14 0x562f731db8a8 <unknown>\n#15 0x562f731dba36 <unknown>\n#16 0x562f731ea5f3 <unknown>\n#17 0x7fb7173f7b43 <unknown>","time":{"start":1691060030701,"stop":1691060030701,"duration":0}},{"uid":"1d6879f62897069c","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/43//#testresult/1d6879f62897069c","status":"broken","statusDetails":"urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=45861): Max retries exceeded with url: /session/e5a689c724648f0d5308caa4a8bd27b1/element (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7f87d2cdee90>: Failed to establish a new connection: [Errno 111] Connection refused'))","time":{"start":1691045251416,"stop":1691045251419,"duration":3}},{"uid":"6dd1d8544808192f","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/43//#testresult/6dd1d8544808192f","status":"broken","statusDetails":"urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=59593): Max retries exceeded with url: /session/9568bcb038578a21277e87dd4550c15b/element (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7ff60fb97670>: Failed to establish a new connection: [Errno 111] Connection refused'))","time":{"start":1690989528027,"stop":1690989528030,"duration":3}},{"uid":"71312ca9c4eba684","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/42//#testresult/71312ca9c4eba684","status":"broken","statusDetails":"urllib3.exceptions.MaxRetryError: HTTPConnectionPool(host='localhost', port=45237): Max retries exceeded with url: /session/ac81092ea0663ab08d44674463c37387/element (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x7fdf21426b00>: Failed to establish a new connection: [Errno 111] Connection refused'))","time":{"start":1690988223471,"stop":1690988223475,"duration":4}},{"uid":"86487660591eaa86","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/41//#testresult/86487660591eaa86","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x563e81ead783 <unknown>\n#1 0x563e81bd9917 <unknown>\n#2 0x563e81c1831b <unknown>\n#3 0x563e81c18411 <unknown>\n#4 0x563e81c53674 <unknown>\n#5 0x563e81c38e2d <unknown>\n#6 0x563e81c510d9 <unknown>\n#7 0x563e81c38bd3 <unknown>\n#8 0x563e81c0ca7b <unknown>\n#9 0x563e81c0d81e <unknown>\n#10 0x563e81e6ee98 <unknown>\n#11 0x563e81e72d67 <unknown>\n#12 0x563e81e7d32c <unknown>\n#13 0x563e81e73993 <unknown>\n#14 0x563e81e42827 <unknown>\n#15 0x563e81e978a8 <unknown>\n#16 0x563e81e97a36 <unknown>\n#17 0x563e81ea65f3 <unknown>\n#18 0x7f31d0a67b43 <unknown>","time":{"start":1690985109829,"stop":1690985125247,"duration":15418}},{"uid":"b8c3c3a9d3440943","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/38//#testresult/b8c3c3a9d3440943","status":"broken","statusDetails":"ValueError: There is no such driver by url https://chromedriver.storage.googleapis.com/115.0.5790/chromedriver_linux64.zip","time":{"start":1690975072451,"stop":1690975072451,"duration":0}},{"uid":"9c3fa0b02e5ae72b","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/37//#testresult/9c3fa0b02e5ae72b","status":"broken","statusDetails":"selenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\n  (unknown error: DevToolsActivePort file doesn't exist)\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\nStacktrace:\n#0 0x55b34f07c783 <unknown>\n#1 0x55b34eda8917 <unknown>\n#2 0x55b34edd3978 <unknown>\n#3 0x55b34edd09c9 <unknown>\n#4 0x55b34ee10a13 <unknown>\n#5 0x55b34ee1015f <unknown>\n#6 0x55b34ee07bd3 <unknown>\n#7 0x55b34eddba7b <unknown>\n#8 0x55b34eddc81e <unknown>\n#9 0x55b34f03de98 <unknown>\n#10 0x55b34f041d67 <unknown>\n#11 0x55b34f04c32c <unknown>\n#12 0x55b34f042993 <unknown>\n#13 0x55b34f011827 <unknown>\n#14 0x55b34f0668a8 <unknown>\n#15 0x55b34f066a36 <unknown>\n#16 0x55b34f0755f3 <unknown>\n#17 0x7f282c34ab43 <unknown>","time":{"start":1690974900450,"stop":1690974900450,"duration":0}},{"uid":"b87a84af70c0ac29","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/36//#testresult/b87a84af70c0ac29","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5618697cd783 <unknown>\n#1 0x5618694f9917 <unknown>\n#2 0x56186953831b <unknown>\n#3 0x561869538411 <unknown>\n#4 0x561869573674 <unknown>\n#5 0x561869558e2d <unknown>\n#6 0x5618695710d9 <unknown>\n#7 0x561869558bd3 <unknown>\n#8 0x56186952ca7b <unknown>\n#9 0x56186952d81e <unknown>\n#10 0x56186978ee98 <unknown>\n#11 0x561869792d67 <unknown>\n#12 0x56186979d32c <unknown>\n#13 0x561869793993 <unknown>\n#14 0x561869762827 <unknown>\n#15 0x5618697b78a8 <unknown>\n#16 0x5618697b7a36 <unknown>\n#17 0x5618697c65f3 <unknown>\n#18 0x7fdff123bb43 <unknown>","time":{"start":1690973750147,"stop":1690973765609,"duration":15462}},{"uid":"99edbe508c9baf59","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/35//#testresult/99edbe508c9baf59","status":"broken","statusDetails":"ValueError: There is no such driver by url https://chromedriver.storage.googleapis.com/115.0.5790/chromedriver_linux64.zip","time":{"start":1690973260185,"stop":1690973260185,"duration":0}},{"uid":"360eebdb3dca58e5","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/34//#testresult/360eebdb3dca58e5","status":"broken","statusDetails":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n#0 0x5606d2d87783 <unknown>\n#1 0x5606d2ab3917 <unknown>\n#2 0x5606d2af231b <unknown>\n#3 0x5606d2af2411 <unknown>\n#4 0x5606d2b2d674 <unknown>\n#5 0x5606d2b12e2d <unknown>\n#6 0x5606d2b2b0d9 <unknown>\n#7 0x5606d2b12bd3 <unknown>\n#8 0x5606d2ae6a7b <unknown>\n#9 0x5606d2ae781e <unknown>\n#10 0x5606d2d48e98 <unknown>\n#11 0x5606d2d4cd67 <unknown>\n#12 0x5606d2d5732c <unknown>\n#13 0x5606d2d4d993 <unknown>\n#14 0x5606d2d1c827 <unknown>\n#15 0x5606d2d718a8 <unknown>\n#16 0x5606d2d71a36 <unknown>\n#17 0x5606d2d805f3 <unknown>\n#18 0x7fe15aef0b43 <unknown>","time":{"start":1690972677225,"stop":1690972692651,"duration":15426}},{"uid":"d1af26f0e13e0fa9","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/33//#testresult/d1af26f0e13e0fa9","status":"broken","statusDetails":"ValueError: There is no such driver by url https://chromedriver.storage.googleapis.com/115.0.5790/chromedriver_linux64.zip","time":{"start":1690971483292,"stop":1690971483292,"duration":0}},{"uid":"7c79f71de9f94754","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/32//#testresult/7c79f71de9f94754","status":"passed","time":{"start":1682507114229,"stop":1682507124089,"duration":9860}},{"uid":"aeacbc407f8939a7","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/32//#testresult/aeacbc407f8939a7","status":"passed","time":{"start":1682505702726,"stop":1682505712521,"duration":9795}},{"uid":"7fb66efcf3d0bd75","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/31//#testresult/7fb66efcf3d0bd75","status":"passed","time":{"start":1682503937496,"stop":1682503947347,"duration":9851}},{"uid":"92553f3cc78f440f","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/30//#testresult/92553f3cc78f440f","status":"passed","time":{"start":1682503385988,"stop":1682503396179,"duration":10191}},{"uid":"95766f6fb66f5194","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/29//#testresult/95766f6fb66f5194","status":"passed","time":{"start":1682502750110,"stop":1682502759785,"duration":9675}},{"uid":"730dcf783ce1468b","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/28//#testresult/730dcf783ce1468b","status":"passed","time":{"start":1682500583813,"stop":1682500593789,"duration":9976}}]},"tags":[]},"source":"bff7a2a63a7ffab1.json","parameterValues":[]}