{"uid":"a94e75802b62a1bf","name":"test_homepage","fullName":"Test_Cases.test_homepage.TestHomepage#test_homepage","historyId":"f4a4792bf9e8d3e6161a1b995a675a88","time":{"start":1690972498019,"stop":1690972498019,"duration":0},"description":"Проверка работоспособности главной страницы","descriptionHtml":"<p>Проверка работоспособности главной страницы</p>\n","status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: headless chrome=115.0.5790.110)\nStacktrace:\n#0 0x5606d2d87783 <unknown>\n#1 0x5606d2ab3917 <unknown>\n#2 0x5606d2aab989 <unknown>\n#3 0x5606d2a9af52 <unknown>\n#4 0x5606d2a9c68b <unknown>\n#5 0x5606d2a9b32d <unknown>\n#6 0x5606d2a9a2ec <unknown>\n#7 0x5606d2a9a25e <unknown>\n#8 0x5606d2a98f1a <unknown>\n#9 0x5606d2a9936a <unknown>\n#10 0x5606d2ab57d0 <unknown>\n#11 0x5606d2b2b885 <unknown>\n#12 0x5606d2b12e02 <unknown>\n#13 0x5606d2b2b0d9 <unknown>\n#14 0x5606d2b12bd3 <unknown>\n#15 0x5606d2ae6a7b <unknown>\n#16 0x5606d2ae781e <unknown>\n#17 0x5606d2d48e98 <unknown>\n#18 0x5606d2d4cd67 <unknown>\n#19 0x5606d2d5732c <unknown>\n#20 0x5606d2d4d993 <unknown>\n#21 0x5606d2d1c827 <unknown>\n#22 0x5606d2d718a8 <unknown>\n#23 0x5606d2d71a36 <unknown>\n#24 0x5606d2d805f3 <unknown>\n#25 0x7fe15aef0b43 <unknown>","statusTrace":"get_webdriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"6f90591c072f39d79138cf8ad728b5ca\")>\n\n    @pytest.fixture(scope='session')\n    def setup(get_webdriver):\n        driver = get_webdriver\n>       driver.get(env_url)\n\nTest_Cases/conftest.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:449: in get\n    self.execute(Command.GET, {\"url\": url})\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:440: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f2df18f00a0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: net::ERR_CONNECTION_TIMED_OUT\\\\n...\\\\n#23 0x5606d2d71a36 \\\\u003Cunknown>\\\\n#24 0x5606d2d805f3 \\\\u003Cunknown>\\\\n#25 0x7fe15aef0b43 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif (\n            status in ErrorCode.INVALID_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR\n            or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER\n        ):\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\nE         (Session info: headless chrome=115.0.5790.110)\nE       Stacktrace:\nE       #0 0x5606d2d87783 <unknown>\nE       #1 0x5606d2ab3917 <unknown>\nE       #2 0x5606d2aab989 <unknown>\nE       #3 0x5606d2a9af52 <unknown>\nE       #4 0x5606d2a9c68b <unknown>\nE       #5 0x5606d2a9b32d <unknown>\nE       #6 0x5606d2a9a2ec <unknown>\nE       #7 0x5606d2a9a25e <unknown>\nE       #8 0x5606d2a98f1a <unknown>\nE       #9 0x5606d2a9936a <unknown>\nE       #10 0x5606d2ab57d0 <unknown>\nE       #11 0x5606d2b2b885 <unknown>\nE       #12 0x5606d2b12e02 <unknown>\nE       #13 0x5606d2b2b0d9 <unknown>\nE       #14 0x5606d2b12bd3 <unknown>\nE       #15 0x5606d2ae6a7b <unknown>\nE       #16 0x5606d2ae781e <unknown>\nE       #17 0x5606d2d48e98 <unknown>\nE       #18 0x5606d2d4cd67 <unknown>\nE       #19 0x5606d2d5732c <unknown>\nE       #20 0x5606d2d4d993 <unknown>\nE       #21 0x5606d2d1c827 <unknown>\nE       #22 0x5606d2d718a8 <unknown>\nE       #23 0x5606d2d71a36 <unknown>\nE       #24 0x5606d2d805f3 <unknown>\nE       #25 0x7fe15aef0b43 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:245: WebDriverException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"get_chrome_options","time":{"start":1690972498020,"stop":1690972498020,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"get_webdriver","time":{"start":1690972498020,"stop":1690972499806,"duration":1786},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup","time":{"start":1690972499806,"stop":1690972630727,"duration":130921},"status":"broken","statusMessage":"selenium.common.exceptions.WebDriverException: Message: unknown error: net::ERR_CONNECTION_TIMED_OUT\n  (Session info: headless chrome=115.0.5790.110)\nStacktrace:\n#0 0x5606d2d87783 <unknown>\n#1 0x5606d2ab3917 <unknown>\n#2 0x5606d2aab989 <unknown>\n#3 0x5606d2a9af52 <unknown>\n#4 0x5606d2a9c68b <unknown>\n#5 0x5606d2a9b32d <unknown>\n#6 0x5606d2a9a2ec <unknown>\n#7 0x5606d2a9a25e <unknown>\n#8 0x5606d2a98f1a <unknown>\n#9 0x5606d2a9936a <unknown>\n#10 0x5606d2ab57d0 <unknown>\n#11 0x5606d2b2b885 <unknown>\n#12 0x5606d2b12e02 <unknown>\n#13 0x5606d2b2b0d9 <unknown>\n#14 0x5606d2b12bd3 <unknown>\n#15 0x5606d2ae6a7b <unknown>\n#16 0x5606d2ae781e <unknown>\n#17 0x5606d2d48e98 <unknown>\n#18 0x5606d2d4cd67 <unknown>\n#19 0x5606d2d5732c <unknown>\n#20 0x5606d2d4d993 <unknown>\n#21 0x5606d2d1c827 <unknown>\n#22 0x5606d2d718a8 <unknown>\n#23 0x5606d2d71a36 <unknown>\n#24 0x5606d2d805f3 <unknown>\n#25 0x7fe15aef0b43 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/pluggy/_callers.py\", line 80, in _multicall\n    res = hook_impl.function(*args)\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 1129, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/_pytest/fixtures.py\", line 908, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"/home/runner/work/LTA_TESTS/LTA_TESTS/Test_Cases/conftest.py\", line 45, in setup\n    driver.get(env_url)\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 449, in get\n    self.execute(Command.GET, {\"url\": url})\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.10/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true}],"afterStages":[],"labels":[{"name":"parentSuite","value":"Test_Cases"},{"name":"suite","value":"test_homepage"},{"name":"subSuite","value":"TestHomepage"},{"name":"host","value":"fv-az1235-717"},{"name":"thread","value":"2181-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"Test_Cases.test_homepage"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":6,"unknown":0,"total":8},"items":[{"uid":"42adba0e2458983b","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/33//#testresult/42adba0e2458983b","status":"broken","statusDetails":"ValueError: There is no such driver by url https://chromedriver.storage.googleapis.com/115.0.5790/chromedriver_linux64.zip","time":{"start":1690971482594,"stop":1690971482594,"duration":0}},{"uid":"35c7ba286c108035","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/32//#testresult/35c7ba286c108035","status":"passed","time":{"start":1682507027475,"stop":1682507028081,"duration":606}},{"uid":"4d1b9249af5e29cc","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/32//#testresult/4d1b9249af5e29cc","status":"passed","time":{"start":1682505618080,"stop":1682505618687,"duration":607}},{"uid":"556e4916a57998d3","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/31//#testresult/556e4916a57998d3","status":"passed","time":{"start":1682503847304,"stop":1682503847907,"duration":603}},{"uid":"ec080f9d2ff2c92e","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/30//#testresult/ec080f9d2ff2c92e","status":"passed","time":{"start":1682503284603,"stop":1682503285246,"duration":643}},{"uid":"904cc412c1cb3871","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/29//#testresult/904cc412c1cb3871","status":"passed","time":{"start":1682502664974,"stop":1682502665063,"duration":89}},{"uid":"bc798e4943fa9099","reportUrl":"https://MaximKrivenko.github.io/LTA_TESTS/28//#testresult/bc798e4943fa9099","status":"passed","time":{"start":1682500497339,"stop":1682500497438,"duration":99}}]},"tags":[]},"source":"a94e75802b62a1bf.json","parameterValues":[]}